//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.05.12 at 10:21:58 下午 CST 
//


package com.solmix.api.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Efield.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Efield">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="text"/>
 *     &lt;enumeration value="boolean"/>
 *     &lt;enumeration value="integer"/>
 *     &lt;enumeration value="float"/>
 *     &lt;enumeration value="date"/>
 *     &lt;enumeration value="time"/>
 *     &lt;enumeration value="datetime"/>
 *     &lt;enumeration value="enum"/>
 *     &lt;enumeration value="intEnum"/>
 *     &lt;enumeration value="sequence"/>
 *     &lt;enumeration value="link"/>
 *     &lt;enumeration value="image"/>
 *     &lt;enumeration value="binary"/>
 *     &lt;enumeration value="imageFile"/>
 *     &lt;enumeration value="any"/>
 *     &lt;enumeration value="modifier"/>
 *     &lt;enumeration value="modifierTimestamp"/>
 *     &lt;enumeration value="creatorTimestamp"/>
 *     &lt;enumeration value="creator"/>
 *     &lt;enumeration value="password"/>
 *     &lt;enumeration value="custom"/>
 *     &lt;enumeration value="ntext"/>
 *     &lt;enumeration value="unknown"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Efield")
@XmlEnum
public enum Efield {

    @XmlEnumValue("text")
    TEXT("text"),
    @XmlEnumValue("boolean")
    BOOLEAN("boolean"),
    @XmlEnumValue("integer")
    INTEGER("integer"),
    @XmlEnumValue("float")
    FLOAT("float"),
    @XmlEnumValue("date")
    DATE("date"),
    @XmlEnumValue("time")
    TIME("time"),
    @XmlEnumValue("datetime")
    DATETIME("datetime"),
    @XmlEnumValue("enum")
    ENUM("enum"),
    @XmlEnumValue("intEnum")
    INT_ENUM("intEnum"),
    @XmlEnumValue("sequence")
    SEQUENCE("sequence"),
    @XmlEnumValue("link")
    LINK("link"),
    @XmlEnumValue("image")
    IMAGE("image"),
    @XmlEnumValue("binary")
    BINARY("binary"),
    @XmlEnumValue("imageFile")
    IMAGE_FILE("imageFile"),
    @XmlEnumValue("any")
    ANY("any"),
    @XmlEnumValue("modifier")
    MODIFIER("modifier"),
    @XmlEnumValue("modifierTimestamp")
    MODIFIER_TIMESTAMP("modifierTimestamp"),
    @XmlEnumValue("creatorTimestamp")
    CREATOR_TIMESTAMP("creatorTimestamp"),
    @XmlEnumValue("creator")
    CREATOR("creator"),
    @XmlEnumValue("password")
    PASSWORD("password"),
    @XmlEnumValue("custom")
    CUSTOM("custom"),
    @XmlEnumValue("ntext")
    NTEXT("ntext"),
    @XmlEnumValue("unknown")
    UNKNOWN("unknown");
    private final String value;

    Efield(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Efield fromValue(String v) {
        for (Efield c: Efield.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
