<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">
	<!-- Place GuiceFilter at the top of your web.xml file -->

	<filter>
		<filter-name>guiceFilter</filter-name>
		<filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
	</filter>


	<filter>
		<filter-name>security</filter-name>
		<!-- <filter-class>org.solmix.web.servlets.SecurityFilter</filter-class> -->
		<filter-class>org.apache.shiro.web.servlet.IniShiroFilter</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>
                # The IniShiroFilter configuration is very powerful and flexible, while still remaining succinct.
                # Please read the org.apache.shiro.web.servlet.IniShiroFilter JavaDoc for information.

                # Quick Tip: Instead of having this configuration here in web.xml, you can instead
                # move all of this to a 'shiro.ini' file at the root of the classpath and remove
                # the 'config' init-param. Or you can specify the 'configPath' init-param and specify the
                # path to a resource at any location (url, file or classpath). This may be desired if the
                # config gets long and you want to keep web.xml clean.
                [main]
                # We'll use credentials hashing, since that keeps the users' credentials (passwords, private keys, etc) safe:
				jdbcRealm = org.solmix.web.security.realm.JdbcRealm
				jdbcCredentialsMatcher = org.solmix.web.security.realm.CredentialsMatcher
				shiro.loginUrl = /login.jsp
				
				# now define the realm, and specify that it use the above credentials matcher:
				jdbcRealm.credentialsMatcher = $jdbcCredentialsMatcher
				jdbcRealm.dataSourceFilter = (osgi.jndi.service.name=jdbc/NoTxHsqlDataSource)
				securityManager.realms = $jdbcRealm
				securityManager.sessionMode = http
				securityManager.sessionManager.globalSessionTimeout = 300000
				# filters
				# [filters]
				# shiro.loginUrl = /login.jsp
				# urls
				[urls]
				# protected url
				/*.html = authc
				/*.jsp = authc
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>security</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>guiceFilter</filter-name>
		<url-pattern>/dispatch/*</url-pattern>
	</filter-mapping>
	<!--wicket Servlets -->
	<!-- <filter> <filter-name>user</filter-name> <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class> 
		<init-param> <param-name>applicationClassName</param-name> <param-value>org.solmix.web.wicket.authentication.AuthenticatedWebApplication</param-value> 
		</init-param> <init-param> <param-name>configuration</param-name> <param-value>development</param-value> 
		<param-value>deployment</param-value> </init-param> </filter> -->
	<!-- Default page to serve -->
	<!-- <filter-mapping> <filter-name>user</filter-name> <url-pattern>/user/*</url-pattern> 
		<dispatcher>REQUEST</dispatcher> <dispatcher>INCLUDE</dispatcher> </filter-mapping> -->
	<listener>
		<listener-class>org.solmix.web.server.guice.SlxGuiceServletContextListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>DataSourceLoader</servlet-name>
		<servlet-class>org.solmix.web.servlets.DataSourceLoader</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DataBindingCall</servlet-name>
		<servlet-class>org.solmix.web.servlets.DataBindingCall</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DataSourceLoader</servlet-name>
		<url-pattern>/sc/DataSourceLoader</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DataBindingCall</servlet-name>
		<url-pattern>/Solmix/sc/IDACall/*</url-pattern>
	</servlet-mapping>
	<!-- =============================================
	==========comet support===========================
	================================================ -->
    <servlet>
		<servlet-name>AtmosphereServlet</servlet-name>
		<servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
		<init-param>
			<param-name>org.atmosphere.disableOnStateEvent</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--<init-param>
            <param-name>org.atmosphere.useWebSocket</param-name>
            <param-value>true</param-value>
            </init-param>
         -->
        <!--<init-param>
            <param-name>org.atmosphere.useNative</param-name>
            <param-value>true</param-value>
            </init-param>
            <init-param>
            <param-name>org.atmosphere.useBlocking</param-name>
            <param-value>true</param-value>
            </init-param>
         -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>AtmosphereServlet</servlet-name>
		<url-pattern>/Solmix/comet/*</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>
