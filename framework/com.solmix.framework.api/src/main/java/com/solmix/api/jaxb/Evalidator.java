//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.05.12 at 10:21:58 下午 CST 
//


package com.solmix.api.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Evalidator.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Evalidator">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="isBoolean"/>
 *     &lt;enumeration value="isString"/>
 *     &lt;enumeration value="isInteger"/>
 *     &lt;enumeration value="isFloat"/>
 *     &lt;enumeration value="isFunction"/>
 *     &lt;enumeration value="requiredIf"/>
 *     &lt;enumeration value="matchesField"/>
 *     &lt;enumeration value="isOneOf"/>
 *     &lt;enumeration value="integerRange"/>
 *     &lt;enumeration value="lengthRange"/>
 *     &lt;enumeration value="contains"/>
 *     &lt;enumeration value="doesntContain"/>
 *     &lt;enumeration value="substringCount"/>
 *     &lt;enumeration value="regexp"/>
 *     &lt;enumeration value="mask"/>
 *     &lt;enumeration value="dateRange"/>
 *     &lt;enumeration value="floatLimit"/>
 *     &lt;enumeration value="floatRange"/>
 *     &lt;enumeration value="floatPrecision"/>
 *     &lt;enumeration value="required"/>
 *     &lt;enumeration value="readOnly"/>
 *     &lt;enumeration value="isUnique"/>
 *     &lt;enumeration value="hasRelatedRecord"/>
 *     &lt;enumeration value="serverCustom"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Evalidator")
@XmlEnum
public enum Evalidator {

    @XmlEnumValue("isBoolean")
    IS_BOOLEAN("isBoolean"),
    @XmlEnumValue("isString")
    IS_STRING("isString"),
    @XmlEnumValue("isInteger")
    IS_INTEGER("isInteger"),
    @XmlEnumValue("isFloat")
    IS_FLOAT("isFloat"),
    @XmlEnumValue("isFunction")
    IS_FUNCTION("isFunction"),
    @XmlEnumValue("requiredIf")
    REQUIRED_IF("requiredIf"),
    @XmlEnumValue("matchesField")
    MATCHES_FIELD("matchesField"),
    @XmlEnumValue("isOneOf")
    IS_ONE_OF("isOneOf"),
    @XmlEnumValue("integerRange")
    INTEGER_RANGE("integerRange"),
    @XmlEnumValue("lengthRange")
    LENGTH_RANGE("lengthRange"),
    @XmlEnumValue("contains")
    CONTAINS("contains"),
    @XmlEnumValue("doesntContain")
    DOESNT_CONTAIN("doesntContain"),
    @XmlEnumValue("substringCount")
    SUBSTRING_COUNT("substringCount"),
    @XmlEnumValue("regexp")
    REGEXP("regexp"),
    @XmlEnumValue("mask")
    MASK("mask"),
    @XmlEnumValue("dateRange")
    DATE_RANGE("dateRange"),
    @XmlEnumValue("floatLimit")
    FLOAT_LIMIT("floatLimit"),
    @XmlEnumValue("floatRange")
    FLOAT_RANGE("floatRange"),
    @XmlEnumValue("floatPrecision")
    FLOAT_PRECISION("floatPrecision"),
    @XmlEnumValue("required")
    REQUIRED("required"),
    @XmlEnumValue("readOnly")
    READ_ONLY("readOnly"),
    @XmlEnumValue("isUnique")
    IS_UNIQUE("isUnique"),
    @XmlEnumValue("hasRelatedRecord")
    HAS_RELATED_RECORD("hasRelatedRecord"),
    @XmlEnumValue("serverCustom")
    SERVER_CUSTOM("serverCustom");
    private final String value;

    Evalidator(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Evalidator fromValue(String v) {
        for (Evalidator c: Evalidator.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
